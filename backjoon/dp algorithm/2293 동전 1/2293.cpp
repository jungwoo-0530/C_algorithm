#include <iostream>

using namespace std;

int n,k;
int dp[10001];
int input[101];
//1
// 1
//2 -> 2 1+2/2
// 11, 2
//3; -> 2 1+3/2
// 111, 12(21)
//4 -> 3 1+4/2
// 1111 112(121 211) 22
//5 ->  4 1+5/2+5/5 = 4
// 11111 1112(1121 1211 2111) 122(212 221) 5
//6 -> 5 1+6/2+6/5 = 5
// 111111, 11112, 1122, 222, 51
//7 -> 6
// 1111111, 111112, 11122, 1222, 511, 52
//8 ->7
// 11111111, 1111112, 111122, 11222, 2222, 5111, 521
//9 ->
//10 -> 1+10/2+10/5 = 1+5+2=8

//1원을 만들 수 있는 경우의 수 1가지


//각각의 동전으로 그 가치를 만들 수 있는 것들을 합한다.
void solve()
{
    cin >> n >> k;

    for(int i=1; i<=n; i++)
        cin >> input[i];
    dp[0] = 1;
    for(int i=1; i<=n; i++)
        for(int j=input[i]; j<=k; j++)
        {
            dp[j] += dp[j-input[i]];
        } 



    cout << dp[k];

}

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(NULL), cout.tie(NULL);

    solve();

    return 0;
}